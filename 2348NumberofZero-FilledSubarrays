/*
Hint-
(1/2)
For each zero, you can calculate the number of zero-filled subarrays that end on that index, 
which is the number of consecutive zeros behind the current element + 1.
(2/2)
Maintain the number of consecutive zeros behind the current element, 
count the number of zero-filled subarrays that end on each index, sum it up to get the answer.
*/

class Solution {
  public long zeroFilledSubarray(int[] nums) {
    long ans = 0;
    int indexBeforeZero = -1;

    for (int i = 0; i < nums.length; ++i)
      if (nums[i] == 0)
        ans += i - indexBeforeZero;
      else
        indexBeforeZero = i;

    return ans;
  }
}

Related Topics-
Array
Math
