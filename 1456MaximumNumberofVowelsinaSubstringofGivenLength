/*
Hint-
(1/2)
Keep a window of size k and maintain the number of vowels in it.
(2/2)
Keep moving the window and update the number of vowels while moving. Answer is max number of vowels of any window.
*/

class Solution {
    public int maxVowels(String s, int k) {
        int len = s.length();
        int count = 0;
        int low = 0;
        int high = 0;

        HashSet<Character> set = new HashSet();
        set.add('a');
        set.add('e');
        set.add('i');
        set.add('o');
        set.add('u');

        while(high<k) {
            if(set.contains(s.charAt(high))) count++;
            high++;
        }

        int maxLen = count;

        while(high<len) {
            if(set.contains(s.charAt(low))) count--;
            if(set.contains(s.charAt(high))) count++;
            low++;
            high++;

            maxLen = Math.max(maxLen,count);
        }
        return maxLen;
    }
}

Related Topics-
String
Sliding Window
